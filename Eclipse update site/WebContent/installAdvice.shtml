<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Arduino Eclipse plugin: Which version to install?</title>
<link href="MyStyle.css" rel="Stylesheet" type="text/css">
</head>
<body>
        <div id="header">
            <a href="http://www.eclipse.org/"><img src="http://download.eclipse.org/eclipse/eclipse.org-common/stylesheets/header_logo.gif" width="163" height="68" border="0" alt="Eclipse Logo" class="logo" /></a>
            <SCRIPT LANGUAGE="JavaScript" type="text/javascript" src="news.js"></SCRIPT> 
            
        </div>
	
	<h1>Which version to install?</h1>
	By now there are so many versions involved that some guidance to what to install is appropriate.<br>
	This page is intended to give this guidance.
	For the newbies to the plugin who 
	<ul><li>do not have eclipse installed</li>
	<li>are willing to do some alfa testing</li>
	<li>want to use Arduino IDE 1.5.2 beta</li>
	</ul> 
	I can strongly advice to download the "brand new" product.<br>
	These downloads simply need to be extracted (and sometimes you also need to make the eclipse program executable) and you can immediatly configure (read show where your arduino IDE is installed) the plugin and play.<br>
	You can find the download page <a href="download.php">here</a>.<br>
	<br>
	For the others:<br>
	There are 3 main components in the deployment of the plugin.<br>
	<ul>
	<li>The Arduino IDE(s) you want to use</li>
	<li>The Eclipse version you want to use</li>
	<li>The Plugin version you want to use</li>
	</ul>
	The Arduino IDE has 3 major breakpoints.<br>
	<ul><li>before 1.5</li>
	<li>between 1.5.0 and 1.5.2 (included)</li>
	<li>after 1.5.2</li>
	</ul>
	The plugin relates to that as follows:<br>
	Before 1.5 beta: use V1 of the plugin.<br>
	between 1.5.0 beta and 1.5.2 beta (included): use 1.5.2 with V2 of the plugin<br>
	between 1.5.2 beta and 1.5.5 beta: not supported<br>
	1.5.5 beta works with V2.2 but you need to fix the remaining V1.5 Libraries (see below)<br>
	
	V1 of the plugin runs in juno and indigo. I don't know wether kepler works.<br>
	V2 of the plugin runs in juno only. (kepler does not work)<br>
	V2.2 of the plugin runs in juno and kepler<br>
	<br>
	If we summarize this in a table we get:<br>
	<table border="1">
	<tr><th>Arduino</th><th>plugin</th><th>eclipse</th></tr>
	<tr><td>before 1.5 beta</td><td>V1</td><td>juno or indigo</td></tr>
	<tr><td>between 1.5.0 beta and 1.5.2 beta (included)</td><td>V2</td><td>juno</td></tr>
	<tr><td>after 1.5.2 beta</td><td>not supported</td><td>not supported</td></tr>
	<tr><td>after 1.5.5 beta</td><td>V2.2</td><td>juno and kepler (needs fix!!)</td></tr></table>
	The library specification 1.5 has not been completely undone in 1.5.5 as such these libraries will not compile in the plugin.<br>
	The libraries that have issues are the ones that have multiple folders under the arch subfolder (normally sam and avr).<br>
	As the plugin includes all code recursively under the library folder all arch code is included which gives problems.<br>
	To fix this problem add #ifdef ARDUINO_ARCH_[upercase(architecture)] at the top of each file and #endif at the bottom.<br>
	So for the files in the sam folder that becomes #ifdef ARDUINO_ARCH_SAM ..... #endif<br>
	Unix users can run the code below in the hardware folder to fix the issue automatically.<br>
	<code># /bin/bash<br>
arch=avr<br>
prepend="#ifdef ARDUINO_ARCH_"${arch^^}<br>
append="#endif ARDUINO_ARCH_"${arch^^}<br>
find -path "*/arch/${arch}/*.cpp" -or -path "*/arch/${arch}/*.h" -or -path "*/arch/${arch}/*.c" |xargs -I % sh -c  "sed -i.bak \"1i ${prepend}\" %; echo "">> %; echo \"$append\">> %;"<br>
arch=sam<br>
prepend="#ifdef ARDUINO_ARCH_"${arch^^}<br>
append="#endif ARDUINO_ARCH_"${arch^^}<br>
find -path "*/arch/${arch}/*.cpp" -or -path "*/arch/${arch}/*.h" -or -path "*/arch/${arch}/*.c" |xargs -I % sh -c  "sed -i.bak \"1i ${prepend}\" %; echo "">> %;echo \"$append\">> %;"<br>
	</code>

	
</body>
</html>